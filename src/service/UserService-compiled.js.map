{"version":3,"sources":["UserService.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAIA;;;;AACA;;AACA;;IAAY,O;;;;;;IAES,W;AAEnB,uBAAY,OAAZ,EAAqB;AAAA;AAEpB;;;;8BAES,O,EAAS,O,EAAS,K,EAAO;AAGjC,UAAI,gBAAgB,IAAI,QAAJ,EAApB;AACA,oBAAc,MAAd,CAAqB,UAArB,EAAiC,QAAQ,IAAR,CAAa,QAA9C;AACA,oBAAc,MAAd,CAAqB,UAArB,EAAiC,QAAQ,IAAR,CAAa,QAA9C;AACA,oBAAc,MAAd,CAAqB,aAArB,EAAoC,QAAQ,IAAR,CAAa,WAAjD;;AAEA,UAAI,OAAO,IAAX;AACA,YAAM,oBAAU,MAAV,CAAiB,MAAvB,EAA+B;AAC7B,gBAAQ,MADqB;AAE7B,iBAAS,EAFoB;AAG7B,cAAM;AAHuB,OAA/B,EAIG,IAJH,CAIQ,UAAU,QAAV,EAAoB;AAC1B,eAAO,SAAS,IAAT,EAAP;AACD,OAND,EAMG,IANH,CAMQ,UAAU,IAAV,EAAgB;AACtB,YAAI,SAAS,KAAK,IAAlB,EAAwB;AACtB,eAAK,cAAL,CAAoB,KAAK,IAAzB;AACD;AACD,gBAAQ,IAAR;AACD,OAXD,EAWG,KAXH,CAWS,UAAU,EAAV,EAAc;AACrB,YAAI,MAAM,EAAC,SAAS,MAAV,EAAkB,MAAM,CAAxB,EAAV;AACA,cAAM,GAAN;AACD,OAdD;AAeD;;;4BAEO,O,EAAS,O,EAAS,K,EAAO;AAG/B,UAAI,cAAc,IAAI,QAAJ,EAAlB;AACA,kBAAY,MAAZ,CAAmB,UAAnB,EAA+B,QAAQ,IAAR,CAAa,QAA5C;AACA,kBAAY,MAAZ,CAAmB,UAAnB,EAA+B,QAAQ,IAAR,CAAa,QAA5C;AACA,kBAAY,MAAZ,CAAmB,YAAnB,EAAiC,QAAQ,IAAR,CAAa,UAA9C;AACA,kBAAY,MAAZ,CAAmB,aAAnB,EAAkC,QAAQ,IAAR,CAAa,WAA/C;;AAEA,UAAI,QAAQ,IAAR,CAAa,UAAb,KAA4B,QAAQ,IAAR,CAAa,QAA7C,EAAuD;AACrD,YAAI,MAAM,EAAC,SAAS,SAAV,EAAqB,MAAM,CAA3B,EAAV;AACA,cAAM,GAAN;AACA;AACD;AACD,YAAM,oBAAU,MAAV,CAAiB,MAAvB,EAA+B;AAC7B,gBAAQ,MADqB;AAE7B,iBAAS,EAFoB;AAG7B,cAAM;AAHuB,OAA/B,EAIG,IAJH,CAIQ,UAAU,QAAV,EAAoB;AAC1B,eAAO,SAAS,IAAT,EAAP;AACD,OAND,EAMG,IANH,CAMQ,UAAU,IAAV,EAAgB;AACtB,gBAAQ,IAAR;AACD,OARD,EAQG,KARH,CAQS,UAAU,EAAV,EAAc;AACrB,YAAI,MAAM,EAAC,SAAS,MAAV,EAAkB,MAAM,CAAxB,EAAV;AACA,cAAM,GAAN;AACD,OAXD;AAYD;;;mCAkBc,I,EAAM;AACnB,cAAQ,GAAR,CAAY,cAAZ,EAA4B,KAAK,YAAjC;AACA,cAAQ,GAAR,CAAY,YAAZ;AACD;;;gCAbkB,Q,EAAU;AAC3B,UAAI,QAAQ,QAAQ,GAAR,CAAY,cAAZ,CAAZ;AACA,UAAI,KAAJ,EAAW;AACT,eAAO,IAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAP;AACD;AACF;;;+BASiB;AAChB,cAAQ,MAAR,CAAe,cAAf;AACD;;;;;kBApFkB,W","file":"UserService-compiled.js","sourcesContent":["/**\n * Created by zhaojunlike on 2016/10/20.\n */\n\nimport ApiConfig from '../api-config';\nimport 'whatwg-fetch';\nimport * as Cookies from \"js-cookie\";\n\nexport default class UserService {\n\n  constructor(options) {\n\n  }\n\n  loginUser(options, success, error) {\n\n    // 这里可以验证data\n    let loginUserData = new FormData();\n    loginUserData.append('username', options.data.username);\n    loginUserData.append('password', options.data.password);\n    loginUserData.append('verify_code', options.data.verify_code);\n\n    let self = this;\n    fetch(ApiConfig.ApiUrl.SignIn, {\n      method: 'POST',\n      headers: {},\n      body: loginUserData\n    }).then(function (response) {\n      return response.json()\n    }).then(function (json) {\n      if (1001 === json.code) {\n        self._saveUserToken(json.data);\n      }\n      success(json);\n    }).catch(function (ex) {\n      let err = {message: '网络错误', code: 4};\n      error(err);\n    })\n  }\n\n  regUser(options, success, error) {\n\n    // 这里可以验证data\n    let regUserData = new FormData();\n    regUserData.append('username', options.data.username);\n    regUserData.append('password', options.data.password);\n    regUserData.append('repassword', options.data.repassword);\n    regUserData.append('verify_code', options.data.verify_code);\n\n    if (options.data.repassword !== options.data.password) {\n      let err = {message: '2次密码不相同', code: 2};\n      error(err);\n      return;\n    }\n    fetch(ApiConfig.ApiUrl.SignUp, {\n      method: 'POST',\n      headers: {},\n      body: regUserData\n    }).then(function (response) {\n      return response.json()\n    }).then(function (json) {\n      success(json);\n    }).catch(function (ex) {\n      let err = {message: '网络错误', code: 4};\n      error(err);\n    });\n  }\n\n\n  /**\n   *\n   * @param callback\n   * @returns {boolean}\n   */\n  static isUserLogin(callback) {\n    let token = Cookies.get('access_token');\n    if (token) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  //存储用户得信息\n  _saveUserToken(data) {\n    Cookies.set('access_token', data.access_token);\n    console.log('设置Cookie成功');\n  }\n\n\n  static LoginOut() {\n    Cookies.remove('access_token');\n  }\n\n}\n"]}