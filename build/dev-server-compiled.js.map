{"version":3,"sources":["dev-server.js"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,SAAS,QAAQ,WAAR,CAAb;AACA,IAAI,CAAC,QAAQ,GAAR,CAAY,QAAjB,EAA2B,QAAQ,GAAR,CAAY,QAAZ,GAAuB,OAAO,GAAP,CAAW,GAAlC;AAC3B,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,UAAU,QAAQ,SAAR,CAAd;AACA,IAAI,UAAU,QAAQ,SAAR,CAAd;AACA,IAAI,MAAM,QAAQ,KAAR,CAAV;AACA,IAAI,kBAAkB,QAAQ,uBAAR,CAAtB;AACA,IAAI,gBAAgB,QAAQ,GAAR,CAAY,QAAZ,KAAyB,SAAzB,GAChB,QAAQ,qBAAR,CADgB,GAEhB,QAAQ,oBAAR,CAFJ;;AAKA,IAAI,OAAO,QAAQ,GAAR,CAAY,IAAZ,IAAoB,OAAO,GAAP,CAAW,IAA1C;;AAGA,IAAI,aAAa,OAAO,GAAP,CAAW,UAA5B;;AAEA,IAAI,MAAM,SAAV;AACA,IAAI,WAAW,QAAQ,aAAR,CAAf;;AAEA,IAAI,gBAAgB,QAAQ,wBAAR,EAAkC,QAAlC,EAA4C;AAC9D,cAAY,cAAc,MAAd,CAAqB,UAD6B;AAE9D,SAAO;AACL,YAAQ,IADH;AAEL,YAAQ;AAFH;AAFuD,CAA5C,CAApB;;AAQA,IAAI,gBAAgB,QAAQ,wBAAR,EAAkC,QAAlC,CAApB;;AAEA,SAAS,MAAT,CAAgB,aAAhB,EAA+B,UAAU,WAAV,EAAuB;AACpD,cAAY,MAAZ,CAAmB,gCAAnB,EAAqD,UAAU,IAAV,EAAgB,EAAhB,EAAoB;AACvE,kBAAc,OAAd,CAAsB,EAAE,QAAQ,QAAV,EAAtB;AACA;AACD,GAHD;AAID,CALD;;AAQA,oBAAY,UAAZ,EAAwB,OAAxB,CAAgC,UAAU,OAAV,EAAmB;AACjD,MAAI,UAAU,WAAW,OAAX,CAAd;AACA,MAAI,OAAO,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,cAAU,EAAE,QAAQ,OAAV,EAAV;AACD;AACD,MAAI,GAAJ,CAAQ,gBAAgB,OAAhB,EAAyB,OAAzB,CAAR;AACD,CAND;;AASA,IAAI,GAAJ,CAAQ,QAAQ,8BAAR,GAAR;;AAGA,IAAI,GAAJ,CAAQ,aAAR;;AAIA,IAAI,GAAJ,CAAQ,aAAR;;AAGA,IAAI,aAAa,KAAK,KAAL,CAAW,IAAX,CAAgB,OAAO,GAAP,CAAW,gBAA3B,EAA6C,OAAO,GAAP,CAAW,kBAAxD,CAAjB;AACA,IAAI,GAAJ,CAAQ,UAAR,EAAoB,QAAQ,MAAR,CAAe,UAAf,CAApB;;AAEA,OAAO,OAAP,GAAiB,IAAI,MAAJ,CAAW,IAAX,EAAiB,UAAU,GAAV,EAAe;AAC/C,MAAI,GAAJ,EAAS;AACP,YAAQ,GAAR,CAAY,GAAZ;AACA;AACD;AACD,MAAI,MAAM,sBAAsB,IAAhC;AACA,UAAQ,GAAR,CAAY,kBAAkB,GAAlB,GAAwB,IAApC;AACA,MAAI,GAAJ;AACD,CARgB,CAAjB","file":"dev-server-compiled.js","sourcesContent":["var config = require('../config')\nif (!process.env.NODE_ENV) process.env.NODE_ENV = config.dev.env\nvar path = require('path')\nvar express = require('express')\nvar webpack = require('webpack')\nvar opn = require('opn')\nvar proxyMiddleware = require('http-proxy-middleware')\nvar webpackConfig = process.env.NODE_ENV === 'testing'\n  ? require('./webpack.prod.conf')\n  : require('./webpack.dev.conf')\n\n// default port where dev server listens for incoming traffic\nvar port = process.env.PORT || config.dev.port\n// Define HTTP proxies to your custom API backend\n// https://github.com/chimurai/http-proxy-middleware\nvar proxyTable = config.dev.proxyTable\n\nvar app = express()\nvar compiler = webpack(webpackConfig)\n\nvar devMiddleware = require('webpack-dev-middleware')(compiler, {\n  publicPath: webpackConfig.output.publicPath,\n  stats: {\n    colors: true,\n    chunks: false\n  }\n})\n\nvar hotMiddleware = require('webpack-hot-middleware')(compiler)\n// force page reload when html-webpack-plugin template changes\ncompiler.plugin('compilation', function (compilation) {\n  compilation.plugin('html-webpack-plugin-after-emit', function (data, cb) {\n    hotMiddleware.publish({ action: 'reload' })\n    cb()\n  })\n})\n\n// proxy api requests\nObject.keys(proxyTable).forEach(function (context) {\n  var options = proxyTable[context]\n  if (typeof options === 'string') {\n    options = { target: options }\n  }\n  app.use(proxyMiddleware(context, options))\n})\n\n// handle fallback for HTML5 history API\napp.use(require('connect-history-api-fallback')())\n\n// serve webpack bundle output\napp.use(devMiddleware)\n\n// enable hot-reload and state-preserving\n// compilation error display\napp.use(hotMiddleware)\n\n// serve pure static assets\nvar staticPath = path.posix.join(config.dev.assetsPublicPath, config.dev.assetsSubDirectory)\napp.use(staticPath, express.static('./static'))\n\nmodule.exports = app.listen(port, function (err) {\n  if (err) {\n    console.log(err)\n    return\n  }\n  var uri = 'http://localhost:' + port\n  console.log('Listening at ' + uri + '\\n')\n  opn(uri)\n})\n"]}