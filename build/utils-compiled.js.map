{"version":3,"sources":["utils.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,SAAS,QAAQ,WAAR,CAAb;AACA,IAAI,oBAAoB,QAAQ,6BAAR,CAAxB;;AAEA,QAAQ,UAAR,GAAqB,UAAU,KAAV,EAAiB;AACpC,MAAI,qBAAqB,QAAQ,GAAR,CAAY,QAAZ,KAAyB,YAAzB,GACrB,OAAO,KAAP,CAAa,kBADQ,GAErB,OAAO,GAAP,CAAW,kBAFf;AAGA,SAAO,KAAK,KAAL,CAAW,IAAX,CAAgB,kBAAhB,EAAoC,KAApC,CAAP;AACD,CALD;;AAOA,QAAQ,UAAR,GAAqB,UAAU,OAAV,EAAmB;AACtC,YAAU,WAAW,EAArB;;AAEA,WAAS,eAAT,CAA0B,OAA1B,EAAmC;AACjC,QAAI,eAAe,QAAQ,GAAR,CAAY,UAAU,MAAV,EAAkB;AAC/C,UAAI,cAAJ;AACA,UAAI,KAAK,IAAL,CAAU,MAAV,CAAJ,EAAuB;AACrB,iBAAS,OAAO,OAAP,CAAe,IAAf,EAAqB,UAArB,CAAT;AACA,yBAAiB,GAAjB;AACD,OAHD,MAGO;AACL,iBAAS,SAAS,SAAlB;AACA,yBAAiB,GAAjB;AACD;AACD,aAAO,UAAU,QAAQ,SAAR,GAAoB,iBAAiB,WAArC,GAAmD,EAA7D,CAAP;AACD,KAVkB,EAUhB,IAVgB,CAUX,GAVW,CAAnB;;AAcA,QAAI,QAAQ,OAAZ,EAAqB;AACnB,aAAO,kBAAkB,OAAlB,CAA0B,kBAA1B,EAA8C,YAA9C,CAAP;AACD,KAFD,MAEO;AACL,aAAO,CAAC,kBAAD,EAAqB,YAArB,EAAmC,IAAnC,CAAwC,GAAxC,CAAP;AACD;AACF;;AAGD,SAAO;AACL,SAAK,gBAAgB,CAAC,KAAD,CAAhB,CADA;AAEL,aAAS,gBAAgB,CAAC,KAAD,CAAhB,CAFJ;AAGL,UAAM,gBAAgB,CAAC,KAAD,EAAQ,MAAR,CAAhB,CAHD;AAIL,UAAM,gBAAgB,CAAC,KAAD,EAAQ,qBAAR,CAAhB,CAJD;AAKL,UAAM,gBAAgB,CAAC,KAAD,EAAQ,MAAR,CAAhB,CALD;AAML,YAAQ,gBAAgB,CAAC,KAAD,EAAQ,QAAR,CAAhB,CANH;AAOL,UAAM,gBAAgB,CAAC,KAAD,EAAQ,QAAR,CAAhB;AAPD,GAAP;AASD,CAnCD;;AAsCA,QAAQ,YAAR,GAAuB,UAAU,OAAV,EAAmB;AACxC,MAAI,SAAS,EAAb;AACA,MAAI,UAAU,QAAQ,UAAR,CAAmB,OAAnB,CAAd;AACA,OAAK,IAAI,SAAT,IAAsB,OAAtB,EAA+B;AAC7B,QAAI,SAAS,QAAQ,SAAR,CAAb;AACA,WAAO,IAAP,CAAY;AACV,YAAM,IAAI,MAAJ,CAAW,QAAQ,SAAR,GAAoB,GAA/B,CADI;AAEV,cAAQ;AAFE,KAAZ;AAID;AACD,SAAO,MAAP;AACD,CAXD","file":"utils-compiled.js","sourcesContent":["var path = require('path')\nvar config = require('../config')\nvar ExtractTextPlugin = require('extract-text-webpack-plugin')\n\nexports.assetsPath = function (_path) {\n  var assetsSubDirectory = process.env.NODE_ENV === 'production'\n    ? config.build.assetsSubDirectory\n    : config.dev.assetsSubDirectory\n  return path.posix.join(assetsSubDirectory, _path)\n}\n\nexports.cssLoaders = function (options) {\n  options = options || {}\n  // generate loader string to be used with extract text plugin\n  function generateLoaders (loaders) {\n    var sourceLoader = loaders.map(function (loader) {\n      var extraParamChar\n      if (/\\?/.test(loader)) {\n        loader = loader.replace(/\\?/, '-loader?')\n        extraParamChar = '&'\n      } else {\n        loader = loader + '-loader'\n        extraParamChar = '?'\n      }\n      return loader + (options.sourceMap ? extraParamChar + 'sourceMap' : '')\n    }).join('!')\n\n    // Extract CSS when that option is specified\n    // (which is the case during production build)\n    if (options.extract) {\n      return ExtractTextPlugin.extract('vue-style-loader', sourceLoader)\n    } else {\n      return ['vue-style-loader', sourceLoader].join('!')\n    }\n  }\n\n  // http://vuejs.github.io/vue-loader/configurations/extract-css.html\n  return {\n    css: generateLoaders(['css']),\n    postcss: generateLoaders(['css']),\n    less: generateLoaders(['css', 'less']),\n    sass: generateLoaders(['css', 'sass?indentedSyntax']),\n    scss: generateLoaders(['css', 'sass']),\n    stylus: generateLoaders(['css', 'stylus']),\n    styl: generateLoaders(['css', 'stylus'])\n  }\n}\n\n// Generate loaders for standalone style files (outside of .vue)\nexports.styleLoaders = function (options) {\n  var output = []\n  var loaders = exports.cssLoaders(options)\n  for (var extension in loaders) {\n    var loader = loaders[extension]\n    output.push({\n      test: new RegExp('\\\\.' + extension + '$'),\n      loader: loader\n    })\n  }\n  return output\n}\n"]}